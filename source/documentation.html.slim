---
title: RSpec documentation
gems:
  - name: rspec-core
    description: >
      The spec runner, providing a rich command line program, flexible and
      customizable reporting, and an API to organize your code examples.
  - name: rspec-expectations
    description: >
      Provides a readable API to express expected outcomes of a code example.
  - name: rspec-mocks
    description: >
      Test double framework, providing multiple types of fake objects to allow you
      to tightly control the environment in which your specs run.
  - name: rspec-rails
    description: >
      Supports using RSpec to test Ruby on Rails applications in place of Rails' built-in test framework.
---
section
  article.rdoc
    h2 Documentation

    table
      tr
        th Gem
        th RDoc
        th Examples (Relish / Gherkin)
      - current_page.data.fetch('gems').each do |gem|
        tr
          td= gem.name
          td= partial "layouts/selector", locals: documentation_options_for(gem.name)
          td= partial "layouts/selector", locals: feature_version_options_for(gem.name)

    p
      | RSpec is composed of multiple libraries, which are designed to work together, or
        can be used independently with other testing tools like #{link_to 'Cucumber', 'https://cucumber.io/docs/cucumber/'}
        or #{link_to 'Minitest', 'http://docs.seattlerb.org/minitest/'}. <br/>The parts of RSpec are:

    ul
      - current_page.data.fetch('gems').each do |gem|
        li
          b
            | #{gem.name}:&nbsp;
          = gem.description

    p
      | The API documentation contains details about all public APIs supported by RSpec.
        We consider these the primary docs and will treat these APIs according to the
        policies of #{link_to 'Semantic Versioning', 'http://semver.org/'}. We encourage you
        to use only public APIs as private APIs may change in any release without warning.
        If you have a use case not supported by the existing public APIs, #{link_to 'please ask', '/help'}
        and we'll be glad to add an API for you or make an existing private API public.

    h2 Gherkin Examples<br/>(e.g. RelishApp)
    p
      | RSpec is also documented through executable examples written in Gherkin.
        The examples are written in an "end-to-end" style demonstrating the use of
        various RSpec features in the context of executable spec files. They are
        a good resource for getting a survey of what RSpec is capable of and seeing
        how the pieces can be used together, but for detailed documentation about a
        particular API or feature, we recommend the API docs.

    p
      | These feature files are executed via Cucumber in our CI process to ensure they
        are always up-to-date with the current code base.

    p
      | Previously our gherkin examples could be read on
        #{ link_to 'RelishApp', 'http://relishapp.com/rspec' } but currently
        this service is unavailable. We thank Matt Wynne for his contribution
        hosting these over the years, and we now host these ourselves via the
        table above.
